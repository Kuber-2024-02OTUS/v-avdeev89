apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-web-server
  labels:
    name: my-web-server
  namespace: homework
spec:
  replicas: 3
  selector:
    matchLabels:
      app: my-web-server
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: my-web-server
    spec:
      containers:
        - name: web-server
          image: nginx
          command: ["/bin/sh","-c"]
          args: ["sed -i 's/listen .*/listen 8000;/g ; s,root .*,root /homework;,g' /etc/nginx/conf.d/default.conf && exec nginx -g 'daemon off;'"]
          ports:
          - containerPort: 8000
          volumeMounts:
          - name: shared-volume
            mountPath: "/homework"
          - name: config-volume
            mountPath: "/homework/conf"
          lifecycle:
            preStop:
              exec:
                command: ["rm", "-f", "/homework/index.html"]
          readinessProbe:
            httpGet:
              path: /index.html
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 5                
      initContainers:
        - name: init-container
          image: busybox:1.28
          command: ['sh', '-c', 'echo "Hello, World!" > /init/index.html']
          volumeMounts:
          - name: shared-volume
            mountPath: /init

      dnsPolicy: Default
      volumes:
      - name: shared-volume
        persistentVolumeClaim:
          claimName: homework-volumes
      - name: config-volume
        configMap:
          name: my-configmap          
      nodeSelector:
        homework: "true"
